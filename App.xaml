<Application x:Class="Mist.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Mist"
             xmlns:global="clr-namespace:Mist"
             xmlns:helper="clr-namespace:Mist.Helper"
             StartupUri="Windows/AuthWindow.xaml">
    <Application.Resources>

            <helper:WorkAreaWidthMatchConverter x:Key="WorkAreaWidthMatchConverter"/>
            <helper:WorkAreaHeightMatchConverter x:Key="WorkAreaHeightMatchConverter"/>

            <SolidColorBrush x:Key="darkPurple" Color="#070F2B"/>
        <SolidColorBrush x:Key="mediumPurple" Color="#1B1A55"/>
        <SolidColorBrush x:Key="grayPurple" Color="#535C91"/>
        <SolidColorBrush x:Key="lightPurple" Color="#9290C3"/>
        <SolidColorBrush x:Key="accentPurple" Color="#4E4FEB"/>
        <SolidColorBrush x:Key="accentblue" Color="#068FFF"/>

        <SolidColorBrush x:Key="closeButton.MouseOver.Background" Color="#E22A27"/>
        <SolidColorBrush x:Key="closeButton.MouseOver.Border" Color="#E22A27"/>
        <SolidColorBrush x:Key="closeButton.Pressed.Background" Color="#E22A27"/>
        <SolidColorBrush x:Key="closeButton.Pressed.Border" Color="#E22A27"/>
        <SolidColorBrush x:Key="closeButton.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="closeButton.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="closeButton.Disabled.Foreground" Color="#FF838383"/>

        <SolidColorBrush x:Key="defaultGray" Color="#bfbfbf"/>
        <SolidColorBrush x:Key="hoverGray" Color="#e3e3e3"/>
        <SolidColorBrush x:Key="clickGray" Color="#fcfcfc"/>

        <FontFamily x:Key="font_light">
            Motiva Sans Light
        </FontFamily>
        <FontFamily x:Key="font_regular">
            Motiva Sans Regular
        </FontFamily>
        <FontFamily x:Key="font_medium">
            Motiva Sans Medium
        </FontFamily>
        <FontFamily x:Key="font_bold">
            Motiva Sans Bold
        </FontFamily>

        <ResourceDictionary x:Key="front_page">
            <Style TargetType="Label" x:Key="govno">
                
            </Style>
        </ResourceDictionary>

        <ControlTemplate x:Key="ClickableLabelTemplate" TargetType="{x:Type Label}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Style>
            </ControlTemplate.Resources>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource ResourceKey=hoverGray}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    
                </Trigger>
            </ControlTemplate.Triggers>
            
            
        </ControlTemplate>
        
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        
        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBoxBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#393C44"/>
                </Trigger>
                <!--<Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="true">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>-->
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#33aaff"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="closeButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="helper:ButtonHelper.ButtonName" Value="Close"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource closeButton.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource closeButton.MouseOver.Border}"/>
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/Assets/close-white.png" Width="16"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="helper:ButtonHelper.ButtonName" Value="Minimize"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="border" Value="#3d4450"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#3d4450"/>
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/Assets/minimize-white.png" Width="16"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="helper:ButtonHelper.ButtonName" Value="Restore"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="border" Value="#3d4450"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#3d4450"/>
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/Assets/restore-white.png" Width="16"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="helper:ButtonHelper.ButtonName" Value="Maximize"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="border" Value="#3d4450"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#3d4450"/>
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/Assets/maximize-white.png" Width="16"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource closeButton.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource closeButton.MouseOver.Border}"/>
                    <Setter Property="Content">
                        <Setter.Value>
                            <Image Source="/Assets/close-white.png"
                           Width="16"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>-->
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="#3d4450"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#3d4450"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsPressed" Value="true"/>
                        <Condition Property="helper:ButtonHelper.ButtonName" Value="Close"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="border" Value="{StaticResource closeButton.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource closeButton.Pressed.Border}"/>
                </MultiTrigger>

                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource closeButton.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource closeButton.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource closeButton.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button" x:Key="titleBar_Button_Base">

            <EventSetter Event="Click" Handler="TitleBarButton_Click"/>

            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style TargetType="Button" x:Key="close_Button" BasedOn="{StaticResource titleBar_Button_Base}">

            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/close.png"
                           Width="16"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="maximize_Button" BasedOn="{StaticResource titleBar_Button_Base}">

            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/maximize.png"
                           Width="16"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="minimize_Button" BasedOn="{StaticResource titleBar_Button_Base}">

            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/minimize.png"
                           Width="16"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="restore_Button" BasedOn="{StaticResource titleBar_Button_Base}">

            <Setter Property="Content">
                <Setter.Value>
                    <Image Source="/Assets/restore.png"
                           Width="16"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        </Style>

        <Style TargetType="Label" x:Key="global_Label">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            
        </Style>

        <Style TargetType="Control" x:Key="global_Control">

        </Style>

    </Application.Resources>
</Application>
